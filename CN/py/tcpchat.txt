tcp chat server:
import socket

# Server details
PORT = 12345
BUFFER_SIZE = 1024

# Create a TCP socket
server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server_socket.bind(('0.0.0.0', PORT))
server_socket.listen(1)

print(f"Server listening on port {PORT}...")

# Accept a connection from a client
client_socket, client_address = server_socket.accept()
print(f"Client connected from: {client_address}")

while True:
    # Receive data from the client
    data = client_socket.recv(BUFFER_SIZE)
    if not data:
        print("Connection closed by client.")
        break
    print(f"Client: {data.decode()}")

    # Get server response
    response = input("Server (Type 'quit' to exit): ")
    client_socket.sendall(response.encode())

    if response.lower() == 'quit':
        break

# Close the client and server sockets
client_socket.close()
server_socket.close()


tcp client chat:
import socket

# Server details
SERVER_IP = '127.0.0.1'  # Local server IP
PORT = 12345
BUFFER_SIZE = 1024

# Create a TCP socket
client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# Connect to the server
client_socket.connect((SERVER_IP, PORT))
print(f"Connected to server at {SERVER_IP}:{PORT}")

while True:
    # Get client message
    message = input("Client (Type 'quit' to exit): ")
    client_socket.sendall(message.encode())

    if message.lower() == 'quit':
        break

    # Receive response from server
    data = client_socket.recv(BUFFER_SIZE)
    if not data:
        print("Connection closed by server.")
        break
    print(f"Server: {data.decode()}")

# Close the client socket
client_socket.close()
